name: Build, Analyze and Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      APPINSIGHTS_KEY: ${{ secrets.APPINSIGHTS_KEY }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.x'
          include-prerelease: true

      - name: Install tools (SonarScanner & ReportGenerator)
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-reportgenerator-globaltool
        shell: pwsh

      - name: Add tools to PATH
        run: echo "$HOME/.dotnet/tools" | Out-File -Append -FilePath $env:GITHUB_PATH
        shell: pwsh

      - name: Begin SonarCloud Analysis
        run: >
          dotnet sonarscanner begin
          /k:"O2do-repository_AutoDo"
          /o:"o2do-repository"
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.cs.opencover.reportsPaths=src/tests/TestResults/**/coverage.cobertura.xml  # Pointage vers le fichier Cobertura
        shell: pwsh

      - name: Restore dependencies
        run: dotnet restore src

      - name: Build solution
        run: dotnet build src --configuration Release --no-restore

      - name: Run tests with coverage
        run: >
          dotnet test src/tests/tests.csproj
          --no-build
          --configuration Release
          --collect:"XPlat Code Coverage"
          --results-directory src/tests/TestResults/
        shell: pwsh

      - name: Convert coverage to Cobertura
        run: >
          reportgenerator
          -reports:src/tests/TestResults/**/coverage.cobertura.xml
          -targetdir:src/tests/TestResults/Cobertura
          -reporttypes:Cobertura
        shell: pwsh

      - name: List coverage files (for debugging)
        run: Get-ChildItem -Path src/tests/TestResults -Recurse -Filter *.cobertura.xml
        shell: pwsh

      - name: End SonarCloud Analysis
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        shell: pwsh

      - name: Publish .NET app
        run: dotnet publish src -c Release -o ${{ env.DOTNET_ROOT }}/myapp

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ env.DOTNET_ROOT }}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'AutoDo'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFIL }}
          package: .
