name: Build and Deploy Backend

on:
  push:
    branches:
      - prod-testing  # Déploiement TEST avant `main`
    paths:
      - 'src/**'
      - '.github/workflows/main_auto.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      APPINSIGHTS_KEY: ${{ secrets.APPINSIGHTS_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.x'
          include-prerelease: true

      - name: Restore dependencies
        run: dotnet restore src

      - name: Build with dotnet
        run: dotnet build src --configuration Release --no-restore

      - name: Run unit tests
        run: dotnet test src/tests

      - name: dotnet publish
        run: dotnet publish src -c Release -o ${{env.DOTNET_ROOT}}/myapp 

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy-to-prod-testing:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Pre-Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Inject environment variables from GitHub Secrets
        run: |
          echo "AZURE_MONITOR_DCE=${{ secrets.AZURE_MONITOR_DCE }}" >> $GITHUB_ENV
          echo "AZURE_MONITOR_DCR_ID=${{ secrets.AZURE_MONITOR_DCR_ID }}" >> $GITHUB_ENV
          echo "AZURE_MONITOR_TABLE=${{ secrets.AZURE_MONITOR_TABLE }}" >> $GITHUB_ENV

      - name: Deploy to Azure Web App (Pre-Prod)
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'AutoDo'
          slot-name: 'Pre-Production'  # Déploiement en pré-prod
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFIL }}
          package: .

  wait-for-validation:
    runs-on: ubuntu-latest
    needs: deploy-to-prod-testing
    steps:
      - name: Manually approve before merging to main
        run: |
          echo "Validation nécessaire avant de merger dans main"
          exit 1 # Bloque le pipeline pour validation manuelle
    environment:
      name: 'Manual Approval Required'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  merge-to-main:
    runs-on: ubuntu-latest
    needs: wait-for-validation
    if: github.ref == 'refs/heads/prod-testing'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Merge `prod-testing` into `main`
        run: |
          git config --global user.email "ci-bot@example.com"
          git config --global user.name "CI Bot"
          git fetch origin
          git checkout main
          git pull origin main
          git merge --no-ff prod-testing -m "Merging prod-testing into main"
          git push origin main

  deploy-to-main:
    runs-on: windows-latest
    needs: merge-to-main
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App (Production)
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'AutoDo'
          slot-name: 'Production'  # Déploiement en prod final
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFIL }}
          package: .
